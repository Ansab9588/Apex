# The method must insert the account into the system and then return the record AND also must accept an empty string, catch the failed DML and then return null
public class AccountHandler {
    public static Account insertNewAccount(String nam){
        
        try{
            Account acc = new Account(Name=nam);
        	insert acc;
            return acc;
        }
        catch (DMLException e) {
    		return null;
        }
    }
}








##The Apex class must be called ContactSearch and be in the public scope
The Apex class must have a public static method called searchForContacts
The method must accept two incoming strings as parameters
The method should then find any contact that has a last name matching the first string, and mailing postal code (API name: MailingPostalCode) matching the second string
The method should finally return a list of Contact records of type List that includes the ID and Name fields
public class ContactSearch {
    public static List<Contact> searchForContacts(String lastName, String postalCode) {
        List<Contact> matchingContacts = new List<Contact>();

        // Query to find contacts with matching last name and postal code
        List<Contact> contacts = [SELECT Id, Name FROM Contact WHERE LastName = :lastName AND MailingPostalCode = :postalCode];

        // Add matching contacts to the result list
        matchingContacts.addAll(contacts);

        return matchingContacts;
    }
}




## The Apex class must be called ContactAndLeadSearch and be in the public scope
The Apex class must have a public static method called searchContactsAndLeads
The method must accept an incoming string as a parameter
The method should then find any contact or lead whose first or last name match the string
The method should finally use a return type of List<List< sObject>>
NOTE: Because SOSL indexes data for searching, you must create a Contact record and Lead record before checking this challenge. Both records must have the last name Smith. The challenge uses these records for the SOSL search
public class ContactAndLeadSearch {
    public static List<List<sObject>> searchContactsAndLeads(String LastName) {
        // Perform SOSL search to find contacts and leads with matching first or last name
        List<List<sObject>> searchResults = [FIND :LastName IN ALL FIELDS RETURNING Contact(Name), Lead(Name)];
        return searchResults;
    }
}



# Showing Erros using SaveResult Object
List <Contact> cts = new List<Contact>();
cts.add(new Contact(FirstName = 'Hashim', LastName = 'Amla'));
cts.add(new Contact(FirstName = 'ABD'));

List<Database.saveResult> savHist = Database.insert(cts, False);

for(Database.saveResult hist : savHist){
    if(hist.isSuccess()){
        System.debug('Contact Insert Id : '+hist.getId());
    }
    else{
        System.debug('Error : '+hist.getErrors()[0].getMessage());
    }
}
